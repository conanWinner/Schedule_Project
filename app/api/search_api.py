from flask import Flask, request, jsonify
from flask_cors import CORS
from pymongo import MongoClient
from sentence_transformers import SentenceTransformer
from dotenv import load_dotenv
import os

load_dotenv()
app = Flask(__name__)
CORS(app)

# K·∫øt n·ªëi MongoDB Atlas
client = MongoClient(os.getenv("MONGO_URI"))
db = client["university_db"]
collection = db["courses"]

# Load m√¥ h√¨nh Sentence Transformer ƒë·ªÉ t·∫°o embeddings
model = SentenceTransformer("all-MiniLM-L6-v2")

@app.route("/search", methods=["POST"])
def search():
    data = request.json
    queries = data.get("queries", [])  # Nh·∫≠n danh s√°ch nhi·ªÅu m√¥n h·ªçc
    top_k = data.get("top_k", 20)

    if not queries:
        return jsonify({"error": "Missing queries"}), 400

    results_dict = {}

    for query in queries:
        query_vector = model.encode(query).tolist()

        pipeline = [
            {
                "$vectorSearch": {
                    "index": "vector_index",
                    "path": "embedding",
                    "queryVector": query_vector,
                    "numCandidates": 1000,
                    "limit": top_k
                }
            },
            {"$unset": "embedding"},
            {
                "$project": {
                    "_id": 0,  # ·∫®n ID ƒë·ªÉ tr√°nh l·ªói tr√πng
                    "T√™n l·ªõp h·ªçc ph·∫ßn": 1,
                    "Gi·∫£ng vi√™n": 1,
                    "score": {"$meta": "vectorSearchScore"}
                }
            }
        ]

        results = list(collection.aggregate(pipeline))

        # üî• Lo·∫°i b·ªè b·∫£n ghi tr√πng l·∫∑p d·ª±a tr√™n "T√™n l·ªõp h·ªçc ph·∫ßn"
        unique_results = []
        seen_courses = set()
        for item in results:
            if item["T√™n l·ªõp h·ªçc ph·∫ßn"] not in seen_courses:
                seen_courses.add(item["T√™n l·ªõp h·ªçc ph·∫ßn"])
                unique_results.append(item)

        results_dict[query] = unique_results if unique_results else [{"T√™n l·ªõp h·ªçc ph·∫ßn": "Kh√¥ng t√¨m th·∫•y", "Gi·∫£ng vi√™n": "", "score": 0}]


    return jsonify(results_dict)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)), debug=True)
